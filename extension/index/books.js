var C=["3. Background And Concepts","4. Tutorial","5. Reference","1. Introduction","introduction","3. Prerequisites","4. Commands","5. Tutorials","5.1. Hybrid applications with Webpack","5.2. npm browser packages","5.2.1. Getting started","5.2.2. Template deep dive","1. Algorithms","2. Command Line","3. Compression","4. Concurrency","5. Cryptography","6. Data Structures","7. Database","8. Date and Time","9. Development Tools","9.1. Debugging","10. Encoding","11. Error Handling","12. File System","13. Hardware Support","14. Memory Management","15. Network","16. Operating System","17. Science","17.1. Mathematics","18. Text Processing","19. Web Programming","19.4. Clients","1. A command line app in 15 minutes","2. In-depth topics","3. Breaking changes","6. The library team","1. How to build and run the compiler","2. Testing the compiler","2.1. Running tests","2.4. Compiletest","2.5. Ecosystem testing","3. Debugging the compiler","4. Profiling the compiler","contributing","19. Notification groups","29. Queries: demand-driven compilation","33. Rustdoc internals","35. Syntax and the AST","36. The HIR (High-level IR)","38. The MIR (Mid-level IR)","41. rustc_driver and rustc_interface","42. Errors and Lints","44. Generic parameter definitions","45. Binders and Higher ranked regions","47. The ty module: representing types","49. Parameter Environments","51. Trait solving","51.5. Chalk-based trait solving","51.6. Next-gen trait solving","52. Type checking","52.4. Opaque Types","58. The borrow checker","58.1. Tracking moves and initialization","58.4. Region inference","64. Constant evaluation","67. Code Generation","3. Library Usage with build.rs","3.1. Tutorial","5. Customizing the Generated Bindings","1. Examples","reference/index","2. Reference","2.17. Supported Types","2.18. #[wasm_bindgen] Attributes","2.18.1. On JavaScript Imports","2.18.2. On Rust Exports","3. web-sys","4. Testing with wasm-bindgen-test","5. Contributing to wasm-bindgen","5.2. Internal Design","5.3. js-sys","5.4. web-sys","Introduction","1. Fuzzing with cargo-fuzz","1.7. Fuzzing on Windows","2. Fuzzing with afl.rs","Platforms","Triagebot","Community","Compiler","Cross Compilation","Prioritization","Steering Meeting","crates.io","docs.rs","Governance","Moderation","Policies","Infrastructure","Guidelines","Documentation","Language","Release","1. What is Chalk?","3. Representing and manipulating types","3.2. Rust types","3.4. Operations","4. Lowering Rust IR to logic","5. Canonical queries","6. Chalk engine","6.2. Logic","7. Chalk recursive solver","profiling","3. Data layout","4. Validity","5. Optimizations","2. Idioms","2.9. Foreign function interface (FFI)","3. Design Patterns","3.1. Behavioural","3.2. Creational","3.3. Structural","3.4. Foreign function interface (FFI)","4. Anti-patterns","5. Functional Programming","6. Additional Resources","2. A Bad Stack","3. An Ok Stack","4. A Persistent Stack","5. A Bad Safe Deque","6. An Ok Unsafe Queue","7. A Production Unsafe Deque","8. A Bunch of Silly Lists","1. Syntax Extensions","2. Declarative Macros","2.3. Minutiae","2.4. Patterns","2.5. Building Blocks","2.5.2. Counting","3. Procedural Macros","3.1. A Methodical Introduction","glossary","1. Floating-point Math","2. Target features","5. Performance profiling","Effective Rust","title-page","1. Types","iterators","2. Traits","3. Concepts","4. Dependencies","visibility","documentation","5. Tooling","6. Beyond Standard Rust","stability","Demystifying Async/Await in Rust","2. Terminology","3. Let's Build a Runtime","2. Section 1 - Hello Rust","3. Section 2 - Stretch Goals","4. Section 3 - Generating Maps","5. Section 4 - Making A Game","2. Software Assurance","3. Rust Zero-Crash Course","4. Understanding Memory Safety and Exploitation","16. Appendix","2. Using the Wasmtime CLI","3. Using the Wasmtime API","3.1. Rust","4. Further Examples","4.1. Debugging WebAssembly","4.2. Profiling WebAssembly","5. Stability","6. Security","7. Contributing","7.11. Maintainer Guidelines"];var N=N;const booksIndex=[{"name":"Rust and WebAssembly Book","url":"https://rustwasm.github.io/docs/book/","pages":[[C[3],C[4],N],["2. Why Rust and WebAssembly?","why-rust-and-webassembly",N],[C[0],"background-and-concepts",N],["3.1. What is WebAssembly?","what-is-webassembly",[C[0]]],[C[1],"game-of-life/introduction",N],["4.1. Setup","game-of-life/setup",[C[1]]],["4.2. Hello, World!","game-of-life/hello-world",[C[1]]],["4.3. Rules","game-of-life/rules",[C[1]]],["4.4. Implementing Life","game-of-life/implementing",[C[1]]],["4.5. Testing Life","game-of-life/testing",[C[1]]],["4.6. Debugging","game-of-life/debugging",[C[1]]],["4.7. Adding Interactivity","game-of-life/interactivity",[C[1]]],["4.8. Time Profiling","game-of-life/time-profiling",[C[1]]],["4.9. Shrinking .wasm Size","game-of-life/code-size",[C[1]]],["4.10. Publishing to npm","game-of-life/publishing-to-npm",[C[1]]],[C[2],C[72],N],["5.1. Crates You Should Know","reference/crates",[C[2]]],["5.2. Tools You Should Know","reference/tools",[C[2]]],["5.3. Project Templates","reference/project-templates",[C[2]]],["5.4. Debugging","reference/debugging",[C[2]]],["5.5. Time Profiling","reference/time-profiling",[C[2]]],["5.6. Shrinking .wasm Size","reference/code-size",[C[2]]],["5.7. JavaScript Interoperation","reference/js-ffi",[C[2]]],["5.8. Which Crates Will Work Off-the-Shelf with WebAssembly?","reference/which-crates-work-with-wasm",[C[2]]],["5.9. How to Add WebAssembly Support to a General-Purpose Crate","reference/add-wasm-support-to-crate",[C[2]]],["5.10. Deploying Rust and WebAssembly to Production","reference/deploying-to-production",[C[2]]]]},{"name":"Wasm-Pack Book","url":"https://rustwasm.github.io/docs/wasm-pack/","pages":[[C[3],C[4],N],["2. Quickstart","quickstart",N],[C[5],"prerequisites/index",N],["3.1. npm (optional)","prerequisites/npm",[C[5]]],["3.2. considerations","prerequisites/considerations",[C[5]]],["3.3. Non-rustup setups","prerequisites/non-rustup-setups",[C[5]]],[C[6],"commands/index",N],["4.1. new","commands/new",[C[6]]],["4.2. build","commands/build",[C[6]]],["4.3. test","commands/test",[C[6]]],["4.4. pack and publish","commands/pack-and-publish",[C[6]]],["4.5. init (DEPRECATED)","commands/init",[C[6]]],[C[7],"tutorials/index",N],[C[8],"tutorials/hybrid-applications-with-webpack/index",[C[7]]],["5.1.1. Getting started","tutorials/hybrid-applications-with-webpack/getting-started",[C[7],C[8]]],["5.1.2. Using your library","tutorials/hybrid-applications-with-webpack/using-your-library",[C[7],C[8]]],[C[9],"tutorials/npm-browser-packages/index",[C[7]]],[C[10],"tutorials/npm-browser-packages/getting-started",[C[7],C[9]]],["5.2.1.1. Manual Setup","tutorials/npm-browser-packages/getting-started/manual-setup",[C[7],C[9],C[10]]],[C[11],"tutorials/npm-browser-packages/template-deep-dive/index",[C[7],C[9]]],["5.2.2.1. Cargo.toml","tutorials/npm-browser-packages/template-deep-dive/cargo-toml",[C[7],C[9],C[11]]],["5.2.2.2. src/lib.rs","tutorials/npm-browser-packages/template-deep-dive/src-lib-rs",[C[7],C[9],C[11]]],["5.2.2.3. src/utils.rs","tutorials/npm-browser-packages/template-deep-dive/src-utils-rs",[C[7],C[9],C[11]]],["5.2.2.4. wee_alloc","tutorials/npm-browser-packages/template-deep-dive/wee_alloc",[C[7],C[9],C[11]]],["5.2.2.5. tests/web.rs","tutorials/npm-browser-packages/template-deep-dive/tests-web-rs",[C[7],C[9],C[11]]],["5.2.3. Building your project","tutorials/npm-browser-packages/building-your-project",[C[7],C[9]]],["5.2.4. Testing your project","tutorials/npm-browser-packages/testing-your-project",[C[7],C[9]]],["5.2.5. Packaging and publishing","tutorials/npm-browser-packages/packaging-and-publishing",[C[7],C[9]]],["5.2.6. Using your library","tutorials/npm-browser-packages/using-your-library",[C[7],C[9]]],["6. Cargo.toml Configuration","cargo-toml-configuration",N],[C[178],C[45],N]]},{"name":"The Rust Cookbook","url":"https://rust-lang-nursery.github.io/rust-cookbook/","pages":[["Table of Contents","intro",N],["About","about",N],[C[12],"algorithms",N],["1.1. Generate Random Values","algorithms/randomness",[C[12]]],["1.2. Sort a Vector","algorithms/sorting",[C[12]]],[C[13],"cli",N],["2.1. Argument Parsing","cli/arguments",[C[13]]],["2.2. ANSI Terminal","cli/ansi_terminal",[C[13]]],[C[14],"compression",N],["3.1. Working with Tarballs","compression/tar",[C[14]]],[C[15],"concurrency",N],["4.1. Explicit Threads","concurrency/threads",[C[15]]],["4.2. Data Parallelism","concurrency/parallel",[C[15]]],[C[16],"cryptography",N],["5.1. Hashing","cryptography/hashing",[C[16]]],["5.2. Encryption","cryptography/encryption",[C[16]]],[C[17],"data_structures",N],["6.1. Bitfield","data_structures/bitfield",[C[17]]],[C[18],"database",N],["7.1. SQLite","database/sqlite",[C[18]]],["7.2. Postgres","database/postgres",[C[18]]],[C[19],"datetime",N],["8.1. Duration and Calculation","datetime/duration",[C[19]]],["8.2. Parsing and Displaying","datetime/parse",[C[19]]],[C[20],"development_tools",N],[C[21],"development_tools/debugging",[C[20]]],["9.1.1. Log Messages","development_tools/debugging/log",[C[20],C[21]]],["9.1.2. Configure Logging","development_tools/debugging/config_log",[C[20],C[21]]],["9.2. Versioning","development_tools/versioning",[C[20]]],["9.3. Build Time Tooling","development_tools/build_tools",[C[20]]],[C[22],"encoding",N],["10.1. Character Sets","encoding/strings",[C[22]]],["10.2. CSV processing","encoding/csv",[C[22]]],["10.3. Structured Data","encoding/complex",[C[22]]],[C[23],"errors",N],["11.1. Handle Error Variants","errors/handle",[C[23]]],[C[24],"file",N],["12.1. Read & Write","file/read-write",[C[24]]],["12.2. Directory Traversal","file/dir",[C[24]]],[C[25],"hardware",N],["13.1. Processor","hardware/processor",[C[25]]],[C[26],"mem",N],["14.1. Global Static","mem/global_static",[C[26]]],[C[27],"net",N],["15.1. Server","net/server",[C[27]]],[C[28],"os",N],["16.1. External Command","os/external",[C[28]]],[C[29],"science",N],[C[30],"science/mathematics",[C[29]]],["17.1.1. Linear Algebra","science/mathematics/linear_algebra",[C[29],C[30]]],["17.1.2. Trigonometry","science/mathematics/trigonometry",[C[29],C[30]]],["17.1.3. Complex Numbers","science/mathematics/complex_numbers",[C[29],C[30]]],["17.1.4. Statistics","science/mathematics/statistics",[C[29],C[30]]],["17.1.5. Miscellaneous","science/mathematics/miscellaneous",[C[29],C[30]]],[C[31],"text",N],["18.1. Regular Expressions","text/regex",[C[31]]],["18.2. String Parsing","text/string_parsing",[C[31]]],[C[32],"web",N],["19.1. Extracting Links","web/scraping",[C[32]]],["19.2. URL","web/url",[C[32]]],["19.3. Media Types","web/mime",[C[32]]],[C[33],"web/clients",[C[32]]],["19.4.1. Making Requests","web/clients/requests",[C[32],C[33]]],["19.4.2. Calling a Web API","web/clients/apis",[C[32],C[33]]],["19.4.3. Downloads","web/clients/download",[C[32],C[33]]],["19.4.4. Web Authentication","web/clients/authentication",[C[32],C[33]]]]},{"name":"Command line apps in Rust","url":"https://rust-cli.github.io/book/","pages":[["Getting started","index",N],[C[34],"tutorial/index",N],["1.1. Project setup","tutorial/setup",[C[34]]],["1.2. Parsing command line arguments","tutorial/cli-args",[C[34]]],["1.3. First implementation","tutorial/impl-draft",[C[34]]],["1.4. Nicer error reporting","tutorial/errors",[C[34]]],["1.5. Output for humans and machines","tutorial/output",[C[34]]],["1.6. Testing","tutorial/testing",[C[34]]],["1.7. Packaging and distributing a Rust tool","tutorial/packaging",[C[34]]],[C[35],"in-depth/index",N],["2.1. Signal handling","in-depth/signals",[C[35]]],["2.2. Using config files","in-depth/config-files",[C[35]]],["2.3. Exit codes","in-depth/exit-code",[C[35]]],["2.4. Communicating with humans","in-depth/human-communication",[C[35]]],["2.5. Communicating with machines","in-depth/machine-communication",[C[35]]],["2.6. Rendering documentation for your CLI apps","in-depth/docs",[C[35]]],["3. Resources","resources/index",N]]},{"name":"Standard library developers Guide","url":"https://std-dev-guide.rust-lang.org/","pages":[["1. About this Guide","about",N],[C[36],"breaking-changes/summary",N],["3.1. New trait implementations","breaking-changes/new-trait-impls",[C[36]]],["3.2. Prelude","breaking-changes/prelude",[C[36]]],["3.3. Doc changes","breaking-changes/doc-changes",[C[36]]],[C[37],"team/summary",N],["6.1. Meetings","team/meetings",[C[37]]],["6.2. Membership","team/membership",[C[37]]],["6.3. Reviewing","team/reviewing",[C[37]]]]},{"name":"Guide to Rustc Development","url":"https://rustc-dev-guide.rust-lang.org/","pages":[["Getting Started","getting-started",N],["About this guide","about-this-guide",N],[C[38],"building/how-to-build-and-run",N],["1.1. Quickstart","building/quickstart",[C[38]]],["1.2. Prerequisites","building/prerequisites",[C[38]]],["1.3. Suggested Workflows","building/suggested",[C[38]]],["1.4. Distribution artifacts","building/build-install-distribution-artifacts",[C[38]]],["1.5. Building Documentation","building/compiler-documenting",[C[38]]],["1.6. Rustdoc overview","rustdoc",[C[38]]],["1.7. Adding a new target","building/new-target",[C[38]]],["1.8. Optimized build","building/optimized-build",[C[38]]],[C[39],"tests/intro",N],[C[40],"tests/running",[C[39]]],["2.1.1. Testing with Docker","tests/docker",[C[39],C[40]]],["2.1.2. Testing with CI","tests/ci",[C[39],C[40]]],["2.2. Adding new tests","tests/adding",[C[39]]],["2.3. Best practices","tests/best-practices",[C[39]]],[C[41],"tests/compiletest",[C[39]]],["2.4.1. UI tests","tests/ui",[C[39],C[41]]],["2.4.2. Test directives","tests/directives",[C[39],C[41]]],["2.4.3. Minicore","tests/minicore",[C[39],C[41]]],[C[42],"tests/ecosystem",[C[39]]],["2.5.1. Crater","tests/crater",[C[39],C[42]]],["2.5.2. Fuchsia","tests/fuchsia",[C[39],C[42]]],["2.5.3. Rust for Linux","tests/rust-for-linux",[C[39],C[42]]],["2.6. Performance testing","tests/perf",[C[39]]],["2.7. Suggest tests tool","tests/suggest-tests",[C[39]]],["2.8. Misc info","tests/misc",[C[39]]],[C[43],"compiler-debugging",N],["3.1. Using the tracing/logging instrumentation","tracing",[C[43]]],[C[44],C[114],N],["4.1. with the linux perf tool","profiling/with_perf",[C[44]]],["4.2. with Windows Performance Analyzer","profiling/wpa_profiling",[C[44]]],["4.3. with the Rust benchmark suite","profiling/with_rustc_perf",[C[44]]],["5. crates.io Dependencies","crates-io",N],["6. Contribution Procedures",C[45],N],["7. About the compiler team","compiler-team",N],["8. Using Git","git",N],["9. Mastering @rustbot","rustbot",N],["10. Walkthrough: a typical contribution","walkthrough",N],["11. Implementing new language features","implementing_new_features",N],["12. Stability attributes",C[158],N],["13. Stabilizing Features","stabilization_guide",N],["14. Feature Gates","feature-gates",N],["15. Coding conventions","conventions",N],["16. Procedures for Breaking Changes","bug-fix-procedure",N],["17. Using external repositories","external-repos",N],["18. Fuzzing","fuzzing",N],[C[46],"notification-groups/about",N],["19.1. Apple","notification-groups/apple",[C[46]]],["19.2. ARM","notification-groups/arm",[C[46]]],["19.3. Cleanup Crew","notification-groups/cleanup-crew",[C[46]]],["19.4. Emscripten","notification-groups/emscripten",[C[46]]],["19.5. LLVM","notification-groups/llvm",[C[46]]],["19.6. RISC-V","notification-groups/risc-v",[C[46]]],["19.7. WASI","notification-groups/wasi",[C[46]]],["19.8. WebAssembly","notification-groups/wasm",[C[46]]],["19.9. Windows","notification-groups/windows",[C[46]]],["19.10. Rust for Linux","notification-groups/rust-for-linux",[C[46]]],["20. Licenses","licenses",N],["21. Editions","guides/editions",N],["22. Prologue","building/bootstrapping/intro",N],["23. What Bootstrapping does","building/bootstrapping/what-bootstrapping-does",N],["24. How Bootstrap does it","building/bootstrapping/how-bootstrap-does-it",N],["25. Debugging bootstrap","building/bootstrapping/debugging-bootstrap",N],["26. Prologue","part-2-intro",N],["27. Overview of the compiler","overview",N],["28. The compiler source code","compiler-src",N],[C[47],"query",N],["29.1. The Query Evaluation Model in Detail","queries/query-evaluation-model-in-detail",[C[47]]],["29.2. Incremental compilation","queries/incremental-compilation",[C[47]]],["29.3. Incremental compilation In Detail","queries/incremental-compilation-in-detail",[C[47]]],["29.4. Debugging and Testing","incrcomp-debugging",[C[47]]],["29.5. Salsa","queries/salsa",[C[47]]],["30. Memory Management in Rustc","memory",N],["31. Serialization in Rustc","serialization",N],["32. Parallel Compilation","parallel-rustc",N],[C[48],"rustdoc-internals",N],["33.1. Search","rustdoc-internals/search",[C[48]]],["34. Prologue","part-3-intro",N],[C[49],"syntax-intro",N],["35.1. Lexing and Parsing","the-parser",[C[49]]],["35.2. Macro expansion","macro-expansion",[C[49]]],["35.3. Name resolution","name-resolution",[C[49]]],["35.4. Attributes","attributes",[C[49]]],["35.5. #[test] Implementation","test-implementation",[C[49]]],["35.6. Panic Implementation","panic-implementation",[C[49]]],["35.7. AST Validation","ast-validation",[C[49]]],["35.8. Feature Gate Checking","feature-gate-ck",[C[49]]],["35.9. Lang Items","lang-items",[C[49]]],[C[50],"hir",N],["36.1. Lowering AST to HIR","ast-lowering",[C[50]]],["36.2. Debugging","hir-debugging",[C[50]]],["37. The THIR (Typed High-level IR)","thir",N],[C[51],"mir/index",N],["38.1. MIR construction","mir/construction",[C[51]]],["38.2. MIR visitor and traversal","mir/visitor",[C[51]]],["38.3. MIR queries and passes: getting the MIR","mir/passes",[C[51]]],["39. Inline assembly","asm",N],["40. Command-line arguments","cli",N],[C[52],"rustc-driver/intro",N],["41.1. Example: Type checking","rustc-driver/interacting-with-the-ast",[C[52]]],["41.2. Example: Getting diagnostics","rustc-driver/getting-diagnostics",[C[52]]],[C[53],"diagnostics",N],["42.1. Diagnostic and subdiagnostic structs","diagnostics/diagnostic-structs",[C[53]]],["42.2. Translation","diagnostics/translation",[C[53]]],["42.3. LintStore","diagnostics/lintstore",[C[53]]],["42.4. Error codes","diagnostics/error-codes",[C[53]]],["42.5. Diagnostic items","diagnostics/diagnostic-items",[C[53]]],["42.6. ErrorGuaranteed","diagnostics/error-guaranteed",[C[53]]],["43. Prologue","part-4-intro",N],[C[54],"generic_parameters_summary",N],["44.1. EarlyBinder and instantiating parameters","ty_module/early_binder",[C[54]]],[C[55],"ty_module/binders",N],["45.1. Instantiating binders","ty_module/instantiating_binders",[C[55]]],["46. Early vs Late bound parameters","early_late_parameters",N],[C[56],"ty",N],["47.1. ADTs and Generic Arguments","ty_module/generic_arguments",[C[56]]],["47.2. Parameter types/consts/regions","ty_module/param_ty_const_regions",[C[56]]],["48. TypeFolder and TypeFoldable","ty-fold",N],[C[57],"param_env/param_env_summary",N],["49.1. What is it?","param_env/param_env_what_is_it",[C[57]]],["49.2. How are ParamEnv's constructed internally","param_env/param_env_construction_internals",[C[57]]],["49.3. Which ParamEnv do I use?","param_env/param_env_acquisition",[C[57]]],["50. Type inference","type-inference",N],[C[58],"traits/resolution",N],["51.1. Higher-ranked trait bounds","traits/hrtb",[C[58]]],["51.2. Caching subtleties","traits/caching",[C[58]]],["51.3. Implied bounds","traits/implied-bounds",[C[58]]],["51.4. Specialization","traits/specialization",[C[58]]],[C[59],"traits/chalk",[C[58]]],["51.5.1. Lowering to logic","traits/lowering-to-logic",[C[58],C[59]]],["51.5.2. Goals and clauses","traits/goals-and-clauses",[C[58],C[59]]],["51.5.3. Canonical queries","traits/canonical-queries",[C[58],C[59]]],["51.5.4. Canonicalization","traits/canonicalization",[C[58],C[59]]],[C[60],"solve/trait-solving",[C[58]]],["51.6.1. Invariants of the type system","solve/invariants",[C[58],C[60]]],["51.6.2. The solver","solve/the-solver",[C[58],C[60]]],["51.6.3. Canonicalization","solve/canonicalization",[C[58],C[60]]],["51.6.4. Coinduction","solve/coinduction",[C[58],C[60]]],["51.6.5. Caching","solve/caching",[C[58],C[60]]],["51.6.6. Proof trees","solve/proof-trees",[C[58],C[60]]],["51.6.7. Normalization","solve/normalization",[C[58],C[60]]],["51.6.8. Opaque types","solve/opaque-types",[C[58],C[60]]],["51.6.9. Significant changes and quirks","solve/significant-changes",[C[58],C[60]]],["51.7. Unsize and CoerceUnsized traits","traits/unsize",[C[58]]],[C[61],"type-checking",N],["52.1. Method Lookup","method-lookup",[C[61]]],["52.2. Variance","variance",[C[61]]],["52.3. Coherence Checking","coherence",[C[61]]],[C[62],"opaque-types-type-alias-impl-trait",[C[61]]],["52.4.1. Inference details","opaque-types-impl-trait-inference",[C[61],C[62]]],["52.4.2. Return Position Impl Trait In Trait","return-position-impl-trait-in-trait",[C[61],C[62]]],["52.4.3. Region inference restrictions","borrow_check/opaque-types-region-inference-restrictions",[C[61],C[62]]],["53. Effect checking","effects",N],["54. Pattern and Exhaustiveness Checking","pat-exhaustive-checking",N],["55. Unsafety Checking","unsafety-checking",N],["56. MIR dataflow","mir/dataflow",N],["57. Drop elaboration","mir/drop-elaboration",N],[C[63],"borrow_check",N],[C[64],"borrow_check/moves_and_initialization",[C[63]]],["58.1.1. Move paths","borrow_check/moves_and_initialization/move_paths",[C[63],C[64]]],["58.2. MIR type checker","borrow_check/type_check",[C[63]]],["58.3. Drop check","borrow_check/drop_check",[C[63]]],[C[65],"borrow_check/region_inference",[C[63]]],["58.4.1. Constraint propagation","borrow_check/region_inference/constraint_propagation",[C[63],C[65]]],["58.4.2. Lifetime parameters","borrow_check/region_inference/lifetime_parameters",[C[63],C[65]]],["58.4.3. Member constraints","borrow_check/region_inference/member_constraints",[C[63],C[65]]],["58.4.4. Placeholders and universes","borrow_check/region_inference/placeholders_and_universes",[C[63],C[65]]],["58.4.5. Closure constraints","borrow_check/region_inference/closure_constraints",[C[63],C[65]]],["58.4.6. Error reporting","borrow_check/region_inference/error_reporting",[C[63],C[65]]],["58.5. Two-phase-borrows","borrow_check/two_phase_borrows",[C[63]]],["59. Closure capture inference","closure",N],["60. Async closures/\"coroutine-closures\"","coroutine-closures",N],["61. Prologue","part-5-intro",N],["62. MIR optimizations","mir/optimizations",N],["63. Debugging MIR","mir/debugging",N],[C[66],"const-eval",N],["64.1. Interpreter","const-eval/interpret",[C[66]]],["65. Monomorphization","backend/monomorph",N],["66. Lowering MIR","backend/lowering-mir",N],[C[67],"backend/codegen",N],["67.1. Updating LLVM","backend/updating-llvm",[C[67]]],["67.2. Debugging LLVM","backend/debugging",[C[67]]],["67.3. Backend Agnostic Codegen","backend/backend-agnostic",[C[67]]],["67.4. Implicit Caller Location","backend/implicit-caller-location",[C[67]]],["68. Libraries and Metadata","backend/libs-and-metadata",N],["69. Profile-guided Optimization","profile-guided-optimization",N],["70. LLVM Source-Based Code Coverage","llvm-coverage-instrumentation",N],["71. Sanitizers Support","sanitizers",N],["72. Debugging support in the Rust compiler","debugging-support-in-rustc",N],["Appendix A: Background topics","appendix/background",N],["Appendix B: Glossary","appendix/glossary",N],["Appendix C: Code Index","appendix/code-index",N],["Appendix D: Compiler Lecture Series","appendix/compiler-lecture",N],["Appendix E: Bibliography","appendix/bibliography",N],["Appendix Z: HumorRust","appendix/humorust",N]]},{"name":"Rust bindgen User Guide","url":"https://rust-lang.github.io/rust-bindgen/","pages":[[C[3],C[4],N],["2. Requirements","requirements",N],[C[68],"library-usage",N],[C[69],"tutorial-0",[C[68]]],["3.1.1. Add bindgen as a Build Dependency","tutorial-1",[C[68],C[69]]],["3.1.2. Create a wrapper.h Header","tutorial-2",[C[68],C[69]]],["3.1.3. Create a build.rs File","tutorial-3",[C[68],C[69]]],["3.1.4. Include the Generated Bindings in src/lib.rs","tutorial-4",[C[68],C[69]]],["3.1.5. Write a Sanity Test","tutorial-5",[C[68],C[69]]],["3.1.6. Publish Your Crate!","tutorial-6",[C[68],C[69]]],["3.2. Bindings for non-system libraries","non-system-libraries",[C[68]]],["4. Command Line Usage","command-line-usage",N],[C[70],"customizing-generated-bindings",N],["5.1. Allowlisting","allowlisting",[C[70]]],["5.2. Blocklisting","blocklisting",[C[70]]],["5.3. Treating a Type as an Opaque Blob of Bytes","opaque",[C[70]]],["5.4. Replacing One Type with Another","replacing-types",[C[70]]],["5.5. Preventing the Derivation of Copy and Clone","nocopy",[C[70]]],["5.6. Preventing the Derivation of Debug","nodebug",[C[70]]],["5.7. Preventing the Derivation of Default","nodefault",[C[70]]],["5.8. Annotating types with #[must-use]","must-use-types",[C[70]]],["5.9. Field visibility",C[154],[C[70]]],["5.10. Code formatting","code-formatting",[C[70]]],["6. Generating Bindings to C++","cpp",N],["7. Generating Bindings to Objective-c","objc",N],["8. Using Unions","using-unions",N],["9. Using Bitfields","using-bitfields",N],["10. Using Flexible Array Members","using-fam",N],["11. FAQ","faq",N]]},{"name":"The wasm-bindgen Guide","url":"https://rustwasm.github.io/docs/wasm-bindgen/","pages":[[C[84],C[4],N],[C[71],"examples/index",N],["1.1. Hello, World!","examples/hello-world",[C[71]]],["1.2. Using console.log","examples/console-log",[C[71]]],["1.3. Small Wasm files","examples/add",[C[71]]],["1.4. Without a Bundler","examples/without-a-bundler",[C[71]]],["1.5. Synchronous Instantiation","examples/synchronous-instantiation",[C[71]]],["1.6. Importing functions from JS","examples/import-js",[C[71]]],["1.7. Working with char","examples/char",[C[71]]],["1.8. js-sys: WebAssembly in WebAssembly","examples/wasm-in-wasm",[C[71]]],["1.9. web-sys: DOM hello world","examples/dom",[C[71]]],["1.10. web-sys: Closures","examples/closures",[C[71]]],["1.11. web-sys: performance.now","examples/performance",[C[71]]],["1.12. web-sys: using fetch","examples/fetch",[C[71]]],["1.13. web-sys: Weather report","examples/weather_report",[C[71]]],["1.14. web-sys: canvas hello world","examples/2d-canvas",[C[71]]],["1.15. web-sys: canvas Julia set","examples/julia",[C[71]]],["1.16. web-sys: WebAudio","examples/web-audio",[C[71]]],["1.17. web-sys: WebGL","examples/webgl",[C[71]]],["1.18. web-sys: WebSockets","examples/websockets",[C[71]]],["1.19. web-sys: WebRTC DataChannel","examples/webrtc_datachannel",[C[71]]],["1.20. web-sys: requestAnimationFrame","examples/request-animation-frame",[C[71]]],["1.21. web-sys: A Simple Paint Program","examples/paint",[C[71]]],["1.22. web-sys: Wasm in Web Worker","examples/wasm-in-web-worker",[C[71]]],["1.23. Parallel Raytracing","examples/raytrace",[C[71]]],["1.24. Wasm Audio Worklet","examples/wasm-audio-worklet",[C[71]]],["1.25. web-sys: A TODO MVC App","examples/todomvc",[C[71]]],[C[73],C[72],N],["2.1. Deployment","reference/deployment",[C[73]]],["2.2. JS snippets","reference/js-snippets",[C[73]]],["2.3. Static JS Objects","reference/static-js-objects",[C[73]]],["2.4. Passing Rust Closures to JS","reference/passing-rust-closures-to-js",[C[73]]],["2.5. Receiving JS Closures in Rust","reference/receiving-js-closures-in-rust",[C[73]]],["2.6. Promises and Futures","reference/js-promises-and-rust-futures",[C[73]]],["2.7. Iterating over JS Values","reference/iterating-over-js-values",[C[73]]],["2.8. Arbitrary Data with Serde","reference/arbitrary-data-with-serde",[C[73]]],["2.9. Accessing Properties of Untyped JS Values","reference/accessing-properties-of-untyped-js-values",[C[73]]],["2.10. Working with Duck-Typed Interfaces","reference/working-with-duck-typed-interfaces",[C[73]]],["2.11. Command Line Interface","reference/cli",[C[73]]],["2.12. Optimizing for Size","reference/optimize-size",[C[73]]],["2.13. Supported Rust Targets","reference/rust-targets",[C[73]]],["2.14. Supported Browsers","reference/browser-support",[C[73]]],["2.15. Support for Weak References","reference/weak-references",[C[73]]],["2.16. Support for Reference Types","reference/reference-types",[C[73]]],[C[74],"reference/types",[C[73]]],["2.17.1. Imported JavaScript Types","reference/types/imported-js-types",[C[73],C[74]]],["2.17.2. Exported Rust Types","reference/types/exported-rust-types",[C[73],C[74]]],["2.17.3. JsValue","reference/types/jsvalue",[C[73],C[74]]],["2.17.4. Box<[T]> and Vec","reference/types/boxed-slices",[C[73],C[74]]],["2.17.5. *const T and *mut T","reference/types/pointers",[C[73],C[74]]],["2.17.6. NonNull","reference/types/non-null",[C[73],C[74]]],["2.17.7. Numbers","reference/types/numbers",[C[73],C[74]]],["2.17.8. bool","reference/types/bool",[C[73],C[74]]],["2.17.9. char","reference/types/char",[C[73],C[74]]],["2.17.10. str","reference/types/str",[C[73],C[74]]],["2.17.11. String","reference/types/string",[C[73],C[74]]],["2.17.12. Number Slices","reference/types/number-slices",[C[73],C[74]]],["2.17.13. Boxed Number Slices","reference/types/boxed-number-slices",[C[73],C[74]]],["2.17.14. Result<T, E>","reference/types/result",[C[73],C[74]]],[C[75],"reference/attributes/index",[C[73]]],[C[76],"reference/attributes/on-js-imports/index",[C[73],C[75]]],["2.18.1.1. catch","reference/attributes/on-js-imports/catch",[C[73],C[75],C[76]]],["2.18.1.2. constructor","reference/attributes/on-js-imports/constructor",[C[73],C[75],C[76]]],["2.18.1.3. extends","reference/attributes/on-js-imports/extends",[C[73],C[75],C[76]]],["2.18.1.4. getter and setter","reference/attributes/on-js-imports/getter-and-setter",[C[73],C[75],C[76]]],["2.18.1.5. final","reference/attributes/on-js-imports/final",[C[73],C[75],C[76]]],["2.18.1.6. indexing_getter, indexing_setter, and indexing_deleter","reference/attributes/on-js-imports/indexing-getter-setter-deleter",[C[73],C[75],C[76]]],["2.18.1.7. js_class = \"Blah\"","reference/attributes/on-js-imports/js_class",[C[73],C[75],C[76]]],["2.18.1.8. js_name","reference/attributes/on-js-imports/js_name",[C[73],C[75],C[76]]],["2.18.1.9. js_namespace","reference/attributes/on-js-imports/js_namespace",[C[73],C[75],C[76]]],["2.18.1.10. method","reference/attributes/on-js-imports/method",[C[73],C[75],C[76]]],["2.18.1.11. module = \"blah\"","reference/attributes/on-js-imports/module",[C[73],C[75],C[76]]],["2.18.1.12. raw_module = \"blah\"","reference/attributes/on-js-imports/raw_module",[C[73],C[75],C[76]]],["2.18.1.13. no_deref","reference/attributes/on-js-imports/no_deref",[C[73],C[75],C[76]]],["2.18.1.14. static_method_of = Blah","reference/attributes/on-js-imports/static_method_of",[C[73],C[75],C[76]]],["2.18.1.15. structural","reference/attributes/on-js-imports/structural",[C[73],C[75],C[76]]],["2.18.1.16. typescript_type","reference/attributes/on-js-imports/typescript_type",[C[73],C[75],C[76]]],["2.18.1.17. variadic","reference/attributes/on-js-imports/variadic",[C[73],C[75],C[76]]],["2.18.1.18. vendor_prefix","reference/attributes/on-js-imports/vendor_prefix",[C[73],C[75],C[76]]],[C[77],"reference/attributes/on-rust-exports/index",[C[73],C[75]]],["2.18.2.1. constructor","reference/attributes/on-rust-exports/constructor",[C[73],C[75],C[77]]],["2.18.2.2. js_name = Blah","reference/attributes/on-rust-exports/js_name",[C[73],C[75],C[77]]],["2.18.2.3. js_class = Blah","reference/attributes/on-rust-exports/js_class",[C[73],C[75],C[77]]],["2.18.2.4. readonly","reference/attributes/on-rust-exports/readonly",[C[73],C[75],C[77]]],["2.18.2.5. skip","reference/attributes/on-rust-exports/skip",[C[73],C[75],C[77]]],["2.18.2.6. skip_jsdoc","reference/attributes/on-rust-exports/skip_jsdoc",[C[73],C[75],C[77]]],["2.18.2.7. start","reference/attributes/on-rust-exports/start",[C[73],C[75],C[77]]],["2.18.2.8. main","reference/attributes/on-rust-exports/main",[C[73],C[75],C[77]]],["2.18.2.9. typescript_custom_section","reference/attributes/on-rust-exports/typescript_custom_section",[C[73],C[75],C[77]]],["2.18.2.10. getter and setter","reference/attributes/on-rust-exports/getter-and-setter",[C[73],C[75],C[77]]],["2.18.2.11. inspectable","reference/attributes/on-rust-exports/inspectable",[C[73],C[75],C[77]]],["2.18.2.12. skip_typescript","reference/attributes/on-rust-exports/skip_typescript",[C[73],C[75],C[77]]],["2.18.2.13. getter_with_clone","reference/attributes/on-rust-exports/getter_with_clone",[C[73],C[75],C[77]]],["2.18.2.14. unchecked_return_type and unchecked_param_type","reference/attributes/on-rust-exports/unchecked_type",[C[73],C[75],C[77]]],["2.18.2.15. return_description and param_description","reference/attributes/on-rust-exports/description",[C[73],C[75],C[77]]],[C[78],"web-sys/index",N],["3.1. Using web-sys","web-sys/using-web-sys",[C[78]]],["3.2. Cargo Features","web-sys/cargo-features",[C[78]]],["3.3. Function Overloads","web-sys/function-overloads",[C[78]]],["3.4. Type Translations","web-sys/type-translations",[C[78]]],["3.5. Inheritance","web-sys/inheritance",[C[78]]],["3.6. Unstable APIs","web-sys/unstable-apis",[C[78]]],[C[79],"wasm-bindgen-test/index",N],["4.1. Usage","wasm-bindgen-test/usage",[C[79]]],["4.2. Writing Asynchronous Tests","wasm-bindgen-test/asynchronous-tests",[C[79]]],["4.3. Testing in Headless Browsers","wasm-bindgen-test/browsers",[C[79]]],["4.4. Continuous Integration","wasm-bindgen-test/continuous-integration",[C[79]]],["4.5. Coverage (Experimental)","wasm-bindgen-test/coverage",[C[79]]],[C[80],"contributing/index",N],["5.1. Testing","contributing/testing",[C[80]]],[C[81],"contributing/design/index",[C[80]]],["5.2.1. JS Objects in Rust","contributing/design/js-objects-in-rust",[C[80],C[81]]],["5.2.2. Exporting a function to JS","contributing/design/exporting-rust",[C[80],C[81]]],["5.2.3. Exporting a struct to JS","contributing/design/exporting-rust-struct",[C[80],C[81]]],["5.2.4. Importing a function from JS","contributing/design/importing-js",[C[80],C[81]]],["5.2.5. Importing a class from JS","contributing/design/importing-js-struct",[C[80],C[81]]],["5.2.6. Rust Type conversions","contributing/design/rust-type-conversions",[C[80],C[81]]],["5.2.7. Types in wasm-bindgen","contributing/design/describe",[C[80],C[81]]],[C[82],"contributing/js-sys/index",[C[80]]],["5.3.1. Testing","contributing/js-sys/testing",[C[80],C[82]]],["5.3.2. Adding More APIs","contributing/js-sys/adding-more-apis",[C[80],C[82]]],[C[83],"contributing/web-sys/index",[C[80]]],["5.4.1. Overview","contributing/web-sys/overview",[C[80],C[83]]],["5.4.2. Testing","contributing/web-sys/testing",[C[80],C[83]]],["5.4.3. Logging","contributing/web-sys/logging",[C[80],C[83]]],["5.4.4. Supporting More Web APIs","contributing/web-sys/supporting-more-web-apis",[C[80],C[83]]],["5.5. Publishing","contributing/publishing",[C[80]]],["5.6. Team","contributing/team",[C[80]]]]},{"name":"Rust API Guidelines","url":"https://rust-lang.github.io/api-guidelines/","pages":[["About","about",N],["Checklist","checklist",N],["1. Naming","naming",N],["2. Interoperability","interoperability",N],["3. Macros","macros",N],["4. Documentation",C[155],N],["5. Predictability","predictability",N],["6. Flexibility","flexibility",N],["7. Type safety","type-safety",N],["8. Dependability","dependability",N],["9. Debuggability","debuggability",N],["10. Future proofing","future-proofing",N],["11. Necessities","necessities",N],["External links","external-links",N]]},{"name":"Rust Fuzz Book","url":"https://rust-fuzz.github.io/book/","pages":[[C[84],C[4],N],[C[85],"cargo-fuzz",N],["1.1. Setup","cargo-fuzz/setup",[C[85]]],["1.2. Tutorial","cargo-fuzz/tutorial",[C[85]]],["1.3. Guide","cargo-fuzz/guide",[C[85]]],["1.4. Structure-Aware Fuzzing","cargo-fuzz/structure-aware-fuzzing",[C[85]]],["1.5. Coverage","cargo-fuzz/coverage",[C[85]]],["1.6. Targets","cargo-fuzz/targets",[C[85]]],[C[86],"cargo-fuzz/windows",[C[85]]],["1.7.1. Setup","cargo-fuzz/windows/setup",[C[85],C[86]]],["1.7.2. Fuzzing DLLs","cargo-fuzz/windows/dll-fuzzing",[C[85],C[86]]],[C[87],"afl",N],["2.1. Setup","afl/setup",[C[87]]],["2.2. Tutorial","afl/tutorial",[C[87]]],["2.3. Installing from source","afl/installing-from-source",[C[87]]],["3. Trophy case","trophy-case",N]]},{"name":"Rust Forge Book","url":"https://forge.rust-lang.org/","pages":[["Overview","index",N],[C[88],"platforms/index",N],["Twitter","platforms/twitter",[C[88]]],["Discord","platforms/discord",[C[88]]],["Email","platforms/email",[C[88]]],["GitHub","platforms/github",[C[88]]],["Zulip","platforms/zulip",[C[88]]],[C[98],"platforms/zulip/moderation",[C[88],"Zulip"]],["Blogs","platforms/blogs",[C[88]]],["Calendars","platforms/calendars",[C[88]]],[C[89],"triagebot/index",N],["Agenda Generator","triagebot/agenda",[C[89]]],["Issue Assignment","triagebot/issue-assignment",[C[89]]],["PR Assignment","triagebot/pr-assignment",[C[89]]],["Tracking PR assignment","triagebot/pr-assignment-tracking",[C[89]]],["Autolabels","triagebot/autolabels",[C[89]]],["Close","triagebot/close",[C[89]]],["Documentation Updates","triagebot/doc-updates",[C[89]]],["GitHub Releases","triagebot/github-releases",[C[89]]],["Glacier","triagebot/glacier",[C[89]]],["Issue Transfer","triagebot/transfer",[C[89]]],["Labeling","triagebot/labeling",[C[89]]],["Major Changes","triagebot/major-changes",[C[89]]],["Mentions","triagebot/mentions",[C[89]]],["Merge Conflicts","triagebot/merge-conflicts",[C[89]]],["No Merge Policy","triagebot/no-merge",[C[89]]],["Nominate","triagebot/nominate",[C[89]]],["Note","triagebot/note",[C[89]]],["Notifications","triagebot/notifications",[C[89]]],["Pinging","triagebot/pinging",[C[89]]],["Rendered link","triagebot/rendered-link",[C[89]]],["Requesting Prioritization","triagebot/requesting-prioritization",[C[89]]],["Review Changes Requested","triagebot/review-submitted",[C[89]]],["Review Requested","triagebot/review-requested",[C[89]]],["Rustc Commit Tracking","triagebot/rustc-commit-list",[C[89]]],["Shortcuts","triagebot/shortcuts",[C[89]]],["Triagebot Dashboard","triagebot/triage-dashboard",[C[89]]],["Zulip Meeting Management","triagebot/zulip-meeting",[C[89]]],["Zulip Notifications","triagebot/zulip-notifications",[C[89]]],["GitHub Actions created PR open/closer","triagebot/bot-pull-requests",[C[89]]],[C[90],"community/index",N],["State of Rust Survey FAQ","community/survey-faq",[C[90]]],[C[91],"compiler/index",N],[C[92],"compiler/cross-compilation/index",[C[91]]],["Windows","compiler/cross-compilation/windows",[C[91],C[92]]],["Cross-team Collaboration","compiler/cross-team-collaboration",[C[91]]],["Review policy","compiler/reviews",[C[91]]],["So you want to add a new option to rustc?","compiler/new_option",[C[91]]],["Major Change Proposals","compiler/mcp",[C[91]]],["Membership","compiler/membership",[C[91]]],[C[93],"compiler/prioritization",[C[91]]],["Procedure","compiler/prioritization/procedure",[C[91],C[93]]],["Priority Levels","compiler/prioritization/priority-levels",[C[91],C[93]]],["Notification groups","compiler/notification-groups",[C[91]]],["Triage Meeting","compiler/triage-meeting",[C[91]]],[C[94],"compiler/steering-meeting",[C[91]]],["Submitting a proposal","compiler/steering-meeting/submit",[C[91],C[94]]],["How to run the planning meeting","compiler/steering-meeting/how-to-run-planning",[C[91],C[94]]],["How to run a design meeting","compiler/steering-meeting/how-to-run-design",[C[91],C[94]]],[C[95],"crates-io/index",N],["Crate removal","crates-io/crate-removal",[C[95]]],["Database maintenance","crates-io/db-maintenance",[C[95]]],[C[96],"docs-rs/index",N],["Adding dependencies to the build environment","docs-rs/add-dependencies",[C[96]]],["Self-hosting a docs.rs instance","docs-rs/self-hosting",[C[96]]],["Maintenance procedures","docs-rs/maintenance",[C[96]]],[C[97],"governance/index",N],["Leadership Council","governance/council",[C[97]]],[C[98],"governance/moderation",[C[97]]],[C[99],"policies/index",N],["Crate ownership policy","policies/crate-ownership",[C[99]]],[C[100],"infra/index",N],["Other Installation Methods","infra/other-installation-methods",[C[100]]],["Archive of Rust Stable Standalone Installers","infra/archive-stable-version-installers",[C[100]]],["Release Channel Layout","infra/channel-layout",[C[100]]],["Service Infrastructure","infra/service-infrastructure",[C[100]]],["Team Maintenance","infra/team-maintenance",[C[100]]],["The Toolstate System","infra/toolstate",[C[100]]],[C[99],"infra/policies/index",[C[100]]],["Broken nightlies","infra/policies/broken-nightlies",[C[100],C[99]]],[C[101],"infra/guidelines/index",[C[100]]],["Static websites","infra/guidelines/static-websites",[C[100],C[101]]],[C[102],"infra/docs/index",[C[100]]],["AWS access for team members","infra/docs/aws-access",[C[100],C[102]]],["AWS access management","infra/docs/aws-access-management",[C[100],C[102]]],["AWS regions","infra/docs/aws-regions",[C[100],C[102]]],["Bastion server","infra/docs/bastion",[C[100],C[102]]],["Bors","infra/docs/bors",[C[100],C[102]]],["Fixing bors queue","infra/docs/bors/queue-resync",[C[100],C[102],"Bors"]],["CDN","infra/docs/cdn",[C[100],C[102]]],["Crater agents","infra/docs/crater-agents",[C[100],C[102]]],["Dev Desktops","infra/docs/dev-desktop",[C[100],C[102]]],["GitHub App for dev-desktops","infra/docs/dev-desktop-github-app",[C[100],C[102]]],["Discord moderation bot","infra/docs/discord-mods-bot",[C[100],C[102]]],["Domain names and DNS","infra/docs/dns",[C[100],C[102]]],[C[96],"infra/docs/docs-rs",[C[100],C[102]]],["ECS services management","infra/docs/ecs-services",[C[100],C[102]]],["Monitoring","infra/docs/monitoring",[C[100],C[102]]],["rust-bots server","infra/docs/rust-bots",[C[100],C[102]]],["rust-lang/rust CI","infra/docs/rustc-ci",[C[100],C[102]]],["Sentry","infra/docs/sentry",[C[100],C[102]]],[C[103],"lang/index",N],["RFC Merge Procedure","lang/rfc-merge-procedure",[C[103]]],["Triage Meeting Procedure","lang/triage-meeting-procedure",[C[103]]],["Libs","libs/index",N],["Maintaining the standard library","libs/maintaining-std",["Libs"]],[C[104],"release/index",N],["Backporting","release/backporting",[C[104]]],["Preparing Release Notes","release/release-notes",[C[104]]],["Release Process","release/process",[C[104]]],["Rollup Procedure","release/rollups",[C[104]]],["Triage Procedure","release/triage-procedure",[C[104]]],["Issue Triaging","release/issue-triaging",[C[104]]],["Triaging Crater Runs","release/crater",[C[104]]],["Edition Releases","editions/edition-releases",N],["Archive","archive/index",N],["Friends of the Tree","archive/fott",["Archive"]],["Release History","archive/release-history",["Archive"]]]},{"name":"Rust Chalk Book","url":"https://rust-lang.github.io/chalk/book/","pages":[[C[105],"what_is_chalk",N],["1.1. Walkthrough","what_is_chalk/walkthrough",[C[105]]],["1.2. Crates","what_is_chalk/crates",[C[105]]],["1.3. REPL","what_is_chalk/repl",[C[105]]],["2. Contribution guide","contribution_guide",N],[C[106],"types",N],["3.1. The Interner","types/role_of_interner",[C[106]]],[C[107],"types/rust_types",[C[106]]],["3.2.1. Alias types","types/rust_types/alias",[C[106],C[107]]],["3.2.2. Application types","types/rust_types/application_ty",[C[106],C[107]]],["3.3. Rust lifetimes","types/rust_lifetimes",[C[106]]],[C[108],"types/operations",[C[106]]],["3.4.1. TypeFoldable and the TypeFolder trait","types/operations/fold",[C[106],C[108]]],[C[109],"clauses",N],["4.1. Goals and clauses","clauses/goals_and_clauses",[C[109]]],["4.2. Type equality and unification","clauses/type_equality",[C[109]]],["4.3. Implied bounds","clauses/implied_bounds",[C[109]]],["4.4. Lowering rules","clauses/lowering_rules",[C[109]]],["4.5. Opaque types (impl Trait)","clauses/opaque_types",[C[109]]],["4.6. Well known traits","clauses/well_known_traits",[C[109]]],["4.7. Well-formedness checking","clauses/wf",[C[109]]],["4.8. Coherence","clauses/coherence",[C[109]]],[C[110],"canonical_queries",N],["5.1. Canonicalization","canonical_queries/canonicalization",[C[110]]],[C[111],"engine",N],["6.1. Major concepts","engine/major_concepts",[C[111]]],[C[112],"engine/logic",[C[111]]],["6.2.1. Coinduction","engine/logic/coinduction",[C[111],C[112]]],["6.3. SLG Solver","engine/slg",[C[111]]],[C[113],"recursive",N],["7.1. The stack","recursive/stack",[C[113]]],["7.2. Inductive cycles","recursive/inductive_cycles",[C[113]]],["7.3. The search graph and caching","recursive/search_graph",[C[113]]],["7.4. Coinduction","recursive/coinduction",[C[113]]],["Appendix A: Glossary and terminology",C[143],N],["Appendix B: Bibliography","bibliography",N],["Appendix C: Incomplete chapters","todo",N],["Appendix D: Publishing Chalk","publishing",N]]},{"name":"Rust Performance Book","url":"https://nnethercote.github.io/perf-book/","pages":[["Title Page",C[148],N],[C[3],C[4],N],["2. Benchmarking","benchmarking",N],["3. Build Configuration","build-configuration",N],["4. Linting","linting",N],["5. Profiling",C[114],N],["6. Inlining","inlining",N],["7. Hashing","hashing",N],["8. Heap Allocations","heap-allocations",N],["9. Type Sizes","type-sizes",N],["10. Standard Library Types","standard-library-types",N],["11. Iterators",C[150],N],["12. Bounds Checks","bounds-checks",N],["13. I/O","io",N],["14. Logging and Debugging","logging-and-debugging",N],["15. Wrapper Types","wrapper-types",N],["16. Machine Code","machine-code",N],["17. Parallelism","parallelism",N],["18. General Tips","general-tips",N],["19. Compile Times","compile-times",N]]},{"name":"Rust's Unsafe Code Guidelines Reference","url":"https://rust-lang.github.io/unsafe-code-guidelines/","pages":[[C[3],C[4],N],["2. Glossary",C[143],N],[C[115],"layout",N],["3.1. Structs and tuples","layout/structs-and-tuples",[C[115]]],["3.2. Scalars","layout/scalars",[C[115]]],["3.3. Enums","layout/enums",[C[115]]],["3.4. Unions","layout/unions",[C[115]]],["3.5. Pointers","layout/pointers",[C[115]]],["3.6. Function pointers","layout/function-pointers",[C[115]]],["3.7. Arrays and Slices","layout/arrays-and-slices",[C[115]]],["3.8. Packed SIMD vectors","layout/packed-simd-vectors",[C[115]]],[C[116],"validity",N],["4.1. Unions","validity/unions",[C[116]]],["4.2. Function Pointers","validity/function-pointers",[C[116]]],[C[117],"optimizations",N],["5.1. Return value optimization","optimizations/return_value_optimization",[C[117]]]]},{"name":"Rust Design Patterns","url":"https://rust-unofficial.github.io/patterns/","pages":[[C[3],"intro",N],["1.1. Translations","translations",[C[3]]],[C[118],"idioms/index",N],["2.1. Use borrowed types for arguments","idioms/coercion-arguments",[C[118]]],["2.2. Concatenating Strings with format!","idioms/concat-format",[C[118]]],["2.3. Constructor","idioms/ctor",[C[118]]],["2.4. The Default Trait","idioms/default",[C[118]]],["2.5. Collections Are Smart Pointers","idioms/deref",[C[118]]],["2.6. Finalisation in Destructors","idioms/dtor-finally",[C[118]]],["2.7. mem::{take(_), replace(_)}","idioms/mem-replace",[C[118]]],["2.8. On-Stack Dynamic Dispatch","idioms/on-stack-dyn-dispatch",[C[118]]],[C[119],"idioms/ffi/intro",[C[118]]],["2.9.1. Idiomatic Errors","idioms/ffi/errors",[C[118],C[119]]],["2.9.2. Accepting Strings","idioms/ffi/accepting-strings",[C[118],C[119]]],["2.9.3. Passing Strings","idioms/ffi/passing-strings",[C[118],C[119]]],["2.10. Iterating over an Option","idioms/option-iter",[C[118]]],["2.11. Pass Variables to Closure","idioms/pass-var-to-closure",[C[118]]],["2.12. Privacy For Extensibility","idioms/priv-extend",[C[118]]],["2.13. Easy doc initialization","idioms/rustdoc-init",[C[118]]],["2.14. Temporary mutability","idioms/temporary-mutability",[C[118]]],["2.15. Return consumed arg on error","idioms/return-consumed-arg-on-error",[C[118]]],[C[120],"patterns/index",N],[C[121],"patterns/behavioural/intro",[C[120]]],["3.1.1. Command","patterns/behavioural/command",[C[120],C[121]]],["3.1.2. Interpreter","patterns/behavioural/interpreter",[C[120],C[121]]],["3.1.3. Newtype","patterns/behavioural/newtype",[C[120],C[121]]],["3.1.4. RAII Guards","patterns/behavioural/RAII",[C[120],C[121]]],["3.1.5. Strategy","patterns/behavioural/strategy",[C[120],C[121]]],["3.1.6. Visitor","patterns/behavioural/visitor",[C[120],C[121]]],[C[122],"patterns/creational/intro",[C[120]]],["3.2.1. Builder","patterns/creational/builder",[C[120],C[122]]],["3.2.2. Fold","patterns/creational/fold",[C[120],C[122]]],[C[123],"patterns/structural/intro",[C[120]]],["3.3.1. Compose Structs","patterns/structural/compose-structs",[C[120],C[123]]],["3.3.2. Prefer Small Crates","patterns/structural/small-crates",[C[120],C[123]]],["3.3.3. Contain unsafety in small modules","patterns/structural/unsafe-mods",[C[120],C[123]]],[C[124],"patterns/ffi/intro",[C[120]]],["3.4.1. Object-Based APIs","patterns/ffi/export",[C[120],C[124]]],["3.4.2. Type Consolidation into Wrappers","patterns/ffi/wrappers",[C[120],C[124]]],[C[125],"anti_patterns/index",N],["4.1. Clone to satisfy the borrow checker","anti_patterns/borrow_clone",[C[125]]],["4.2. #[deny(warnings)]","anti_patterns/deny-warnings",[C[125]]],["4.3. Deref Polymorphism","anti_patterns/deref",[C[125]]],[C[126],"functional/index",N],["5.1. Programming paradigms","functional/paradigms",[C[126]]],["5.2. Generics as Type Classes","functional/generics-type-classes",[C[126]]],["5.3. Functional Optics","functional/optics",[C[126]]],[C[127],"additional_resources/index",N],["6.1. Design principles","additional_resources/design-principles",[C[127]]]]},{"name":"Learn Rust With Entirely Too Many Linked Lists","url":"https://rust-unofficial.github.io/too-many-lists/","pages":[[C[3],"index",N],[C[128],"first",N],["2.1. Layout","first-layout",[C[128]]],["2.2. New","first-new",[C[128]]],["2.3. Ownership 101","first-ownership",[C[128]]],["2.4. Push","first-push",[C[128]]],["2.5. Pop","first-pop",[C[128]]],["2.6. Testing","first-test",[C[128]]],["2.7. Drop","first-drop",[C[128]]],["2.8. Final Code","first-final",[C[128]]],[C[129],"second",N],["3.1. Option","second-option",[C[129]]],["3.2. Generic","second-generic",[C[129]]],["3.3. Peek","second-peek",[C[129]]],["3.4. IntoIter","second-into-iter",[C[129]]],["3.5. Iter","second-iter",[C[129]]],["3.6. IterMut","second-iter-mut",[C[129]]],["3.7. Final Code","second-final",[C[129]]],[C[130],"third",N],["4.1. Layout","third-layout",[C[130]]],["4.2. Basics","third-basics",[C[130]]],["4.3. Drop","third-drop",[C[130]]],["4.4. Arc","third-arc",[C[130]]],["4.5. Final Code","third-final",[C[130]]],[C[131],"fourth",N],["5.1. Layout","fourth-layout",[C[131]]],["5.2. Building","fourth-building",[C[131]]],["5.3. Breaking","fourth-breaking",[C[131]]],["5.4. Peek","fourth-peek",[C[131]]],["5.5. Symmetric Cases","fourth-symmetry",[C[131]]],["5.6. Iteration","fourth-iteration",[C[131]]],["5.7. Final Code","fourth-final",[C[131]]],[C[132],"fifth",N],["6.1. Layout","fifth-layout",[C[132]]],["6.2. Unsafe","fifth-unsafe",[C[132]]],["6.3. Basics","fifth-basics",[C[132]]],["6.4. Miri","fifth-miri",[C[132]]],["6.5. Stacked Borrows","fifth-stacked-borrows",[C[132]]],["6.6. Testing Stacked Borrows","fifth-testing-stacked-borrows",[C[132]]],["6.7. Layout + Basics Redux","fifth-layout-basics-redux",[C[132]]],["6.8. Extras","fifth-extras",[C[132]]],["6.9. Final Code","fifth-final",[C[132]]],[C[133],"sixth",N],["7.1. Layout","sixth-layout",[C[133]]],["7.2. Variance and Subtyping","sixth-variance",[C[133]]],["7.3. Basics","sixth-basics",[C[133]]],["7.4. Panic Safety","sixth-panics",[C[133]]],["7.5. Boring Combinatorics","sixth-combinatorics",[C[133]]],["7.6. Filling In Random Bits","sixth-random-bits",[C[133]]],["7.7. Testing","sixth-testing",[C[133]]],["7.8. Send, Sync, and Compile Tests","sixth-send-sync",[C[133]]],["7.9. An Introduction To Cursors","sixth-cursors-intro",[C[133]]],["7.10. Implementing Cursors","sixth-cursors-impl",[C[133]]],["7.11. Testing Cursors","sixth-cursors-testing",[C[133]]],["7.12. Final Code","sixth-final",[C[133]]],[C[134],"infinity",N],["8.1. The Double Single","infinity-double-single",[C[134]]],["8.2. The Stack-Allocated Linked List","infinity-stack-allocated",[C[134]]]]},{"name":"The Little Book of Rust Macros","url":"https://veykril.github.io/tlborm/","pages":[[C[84],C[4],N],[C[135],"syntax-extensions",N],["1.1. Source Analysis","syntax-extensions/source-analysis",[C[135]]],["1.2. Macros in the Ast","syntax-extensions/ast",[C[135]]],["1.3. Expansion","syntax-extensions/expansion",[C[135]]],["1.4. Hygiene","syntax-extensions/hygiene",[C[135]]],["1.5. Debugging","syntax-extensions/debugging",[C[135]]],[C[136],"decl-macros",N],["2.1. A Methodical Introduction","decl-macros/macros-methodical",[C[136]]],["2.2. A Practical Introduction","decl-macros/macros-practical",[C[136]]],[C[137],"decl-macros/minutiae",[C[136]]],["2.3.1. Fragment Specifiers","decl-macros/minutiae/fragment-specifiers",[C[136],C[137]]],["2.3.2. Metavariables and Expansion Redux","decl-macros/minutiae/metavar-and-expansion",[C[136],C[137]]],["2.3.3. Metavariable Expressions","decl-macros/minutiae/metavar-expr",[C[136],C[137]]],["2.3.4. Hygiene","decl-macros/minutiae/hygiene",[C[136],C[137]]],["2.3.5. Non-Identifier Identifiers","decl-macros/minutiae/identifiers",[C[136],C[137]]],["2.3.6. Debugging","decl-macros/minutiae/debugging",[C[136],C[137]]],["2.3.7. Scoping","decl-macros/minutiae/scoping",[C[136],C[137]]],["2.3.8. Import and Export","decl-macros/minutiae/import-export",[C[136],C[137]]],[C[138],"decl-macros/patterns",[C[136]]],["2.4.1. Callbacks","decl-macros/patterns/callbacks",[C[136],C[138]]],["2.4.2. Incremental TT Munchers","decl-macros/patterns/tt-muncher",[C[136],C[138]]],["2.4.3. Internal Rules","decl-macros/patterns/internal-rules",[C[136],C[138]]],["2.4.4. Push-down Accumulation","decl-macros/patterns/push-down-acc",[C[136],C[138]]],["2.4.5. Repetition Replacement","decl-macros/patterns/repetition-replacement",[C[136],C[138]]],["2.4.6. TT Bundling","decl-macros/patterns/tt-bundling",[C[136],C[138]]],[C[139],"decl-macros/building-blocks",[C[136]]],["2.5.1. AST Coercion","decl-macros/building-blocks/ast-coercion",[C[136],C[139]]],[C[140],"decl-macros/building-blocks/counting",[C[136],C[139]]],["2.5.2.1. Abacus Counting","decl-macros/building-blocks/abacus-counting",[C[136],C[139],C[140]]],["2.5.3. Parsing Rust","decl-macros/building-blocks/parsing",[C[136],C[139]]],["2.6. Macros 2.0","decl-macros/macros2",[C[136]]],[C[141],"proc-macros",N],[C[142],"proc-macros/methodical",[C[141]]],["3.1.1. Function-like","proc-macros/methodical/function-like",[C[141],C[142]]],["3.1.2. Attribute","proc-macros/methodical/attr",[C[141],C[142]]],["3.1.3. Derive","proc-macros/methodical/derive",[C[141],C[142]]],["3.3. Third-Party Crates","proc-macros/third-party-crates",[C[141]]],["3.4. Hygiene and Spans","proc-macros/hygiene",[C[141]]],["Glossary",C[143],N]]},{"name":"Rust SIMD Performance Guide","url":"https://rust-lang.github.io/packed_simd/perf-guide/introduction.html","pages":[[C[84],C[4],N],[C[144],"float-math/fp",N],["1.1. Short-vector Math Library","float-math/svml",[C[144]]],["1.2. Approximate functions","float-math/approx",[C[144]]],["1.3. Fused multiply-accumulate","float-math/fma",[C[144]]],[C[145],"target-feature/features",N],["2.1. Using RUSTFLAGS","target-feature/rustflags",[C[145]]],["2.2. Using the target_feature attribute","target-feature/attribute",[C[145]]],["2.3. Interaction with inlining","target-feature/inlining",[C[145]]],["2.4. Detecting features at runtime","target-feature/runtime",[C[145]]],["3. Bounds checking","bound_checks",N],["4. Vertical and horizontal operations","vert-hor-ops",N],[C[146],"prof/profiling",N],["5.1. Profiling on Linux","prof/linux",[C[146]]],["5.2. Using machine code analyzers","prof/mca",[C[146]]]]},{"name":C[147],"url":"https://www.lurklurk.org/effective-rust/","pages":[[C[147],C[148],N],["Preface","preface",N],[C[149],"types",N],["1.1. Item 1: Use the type system to express your data structures","use-types",[C[149]]],["1.2. Item 2: Use the type system to express common behavior","use-types-2",[C[149]]],["1.3. Item 3: Prefer Option and Result transforms over explicit match expressions","transform",[C[149]]],["1.4. Item 4: Prefer idiomatic Error types","errors",[C[149]]],["1.5. Item 5: Understand type conversions","casts",[C[149]]],["1.6. Item 6: Embrace the newtype pattern","newtype",[C[149]]],["1.7. Item 7: Use builders for complex types","builders",[C[149]]],["1.8. Item 8: Familiarize yourself with reference and pointer types","references",[C[149]]],["1.9. Item 9: Consider using iterator transforms instead of explicit loops",C[150],[C[149]]],[C[151],"traits",N],["2.1. Item 10: Familiarize yourself with standard traits","std-traits",[C[151]]],["2.2. Item 11: Implement the Drop trait for RAII patterns","raii",[C[151]]],["2.3. Item 12: Understand the trade-offs between generics and trait objects","generics",[C[151]]],["2.4. Item 13: Use default implementations to minimize required trait methods","default-impl",[C[151]]],[C[152],"concepts",N],["3.1. Item 14: Understand lifetimes","lifetimes",[C[152]]],["3.2. Item 15: Understand the borrow checker","borrows",[C[152]]],["3.3. Item 16: Avoid writing unsafe code","unsafe",[C[152]]],["3.4. Item 17: Be wary of shared-state parallelism","deadlock",[C[152]]],["3.5. Item 18: Don't panic","panic",[C[152]]],["3.6. Item 19: Avoid reflection","reflection",[C[152]]],["3.7. Item 20: Avoid the temptation to over-optimize","optimize",[C[152]]],[C[153],"deps",N],["4.1. Item 21: Understand what semantic versioning promises","semver",[C[153]]],["4.2. Item 22: Minimize visibility",C[154],[C[153]]],["4.3. Item 23: Avoid wildcard imports","wildcard",[C[153]]],["4.4. Item 24: Re-export dependencies whose types appear in your API","re-export",[C[153]]],["4.5. Item 25: Manage your dependency graph","dep-graph",[C[153]]],["4.6. Item 26: Be wary of feature creep","features",[C[153]]],[C[156],"tooling",N],["5.1. Item 27: Document public interfaces",C[155],[C[156]]],["5.2. Item 28: Use macros judiciously","macros",[C[156]]],["5.3. Item 29: Listen to Clippy","clippy",[C[156]]],["5.4. Item 30: Write more than unit tests","testing",[C[156]]],["5.5. Item 31: Take advantage of the tooling ecosystem","use-tools",[C[156]]],["5.6. Item 32: Set up a continuous integration (CI) system","ci",[C[156]]],[C[157],"beyond-std",N],["6.1. Item 33: Consider making library code no_std compatible","no-std",[C[157]]],["6.2. Item 34: Control what crosses FFI boundaries","ffi",[C[157]]],["6.3. Item 35: Prefer bindgen to manual FFI mappings","bindgen",[C[157]]],["Afterword","afterword",N],["Index","indexing",N]]},{"name":"Rust for the Polyglot Programmer","url":"https://www.chiark.greenend.org.uk/~ianmdlvl/rust-polyglot/","pages":[["Contents","index",N],["1. Introduction and overview","intro",N],["2. Syntax","syntax",N],["3. Types and patterns","types",N],["4. Ownership, memory model","ownership",N],["5. Traits, methods","traits",N],["6. Safety, threadsafety","safety",N],["7. Error handling","errors",N],["8. Macros and metaprogramming","macros",N],["9. Async Rust","async",N],["10. FFI","ffi",N],["11. Documentation and testing","rustdoc",N],["12. Stability",C[158],N],["13. Cargo","cargo",N],["14. Libraries","libs",N],["15. Colophon","colophon",N]]},{"name":C[159],"url":"https://ruspiro.github.io/ruspiro-async-book/","pages":[[C[159],"cover",N],[C[3],"01-00-introduction",N],["1.1. Motivation","01-01-motivation",[C[3]]],[C[160],"02-00-terminology",N],["2.1. Future","02-01-future",[C[160]]],["2.2. Executor","02-02-executor",[C[160]]],["2.3. Async","02-03-async",[C[160]]],["2.4. Await","02-04-await",[C[160]]],[C[161],"03-00-build-the-runtime",N],["3.1. The Thought","03-01-the-thought",[C[161]]],["3.2. The First Naive Brain","03-02-first-brain",[C[161]]],["3.3. The Context and the Waker","03-03-context-and-waker",[C[161]]],["3.4. MPMC - Channel","03-04-mpmc-channel",[C[161]]],["3.5. The simple Brain","03-05-simple-brain",[C[161]]],["4. Proof the Runtime","04-00-proof-runtime",N],["5. Conclusion","05-00-conclusion",N],["The Author","author",N]]},{"name":"Roguelike Tutorial - In Rust","url":"https://bfnightly.bracketproductions.com/","pages":[[C[84],"chapter_0",N],["1. Building for the Web","webbuild",N],[C[162],"chapter_1",N],["2.1. Entities and Components","chapter_2",[C[162]]],["2.2. Walking A Map","chapter_3",[C[162]]],["2.3. A More Interesting Map","chapter_4",[C[162]]],["2.4. Field of View","chapter_5",[C[162]]],["2.5. Monsters","chapter_6",[C[162]]],["2.6. Dealing Damage","chapter_7",[C[162]]],["2.7. User Interface","chapter_8",[C[162]]],["2.8. Items and Inventory","chapter_9",[C[162]]],["2.9. Ranged Scrolls/Targeting","chapter_10",[C[162]]],["2.10. Saving and Loading","chapter_11",[C[162]]],["2.11. Delving Deeper","chapter_12",[C[162]]],["2.12. Difficulty","chapter_13",[C[162]]],["2.13. Equipment","chapter_14",[C[162]]],[C[163],"chapter_15",N],["3.1. Nice Walls with Bitsets","chapter_16",[C[163]]],["3.2. Bloodstains","chapter_17",[C[163]]],["3.3. Particle Effects","chapter_18",[C[163]]],["3.4. Hunger Clock","chapter_19",[C[163]]],["3.5. Magic Mapping","chapter_20",[C[163]]],["3.6. REX Paint Menu","chapter_21",[C[163]]],["3.7. Simple Traps","chapter_22",[C[163]]],[C[164],"chapter23-prefix",N],["4.1. Refactor Map Building","chapter_23",[C[164]]],["4.2. Map Building Test Harness","chapter_24",[C[164]]],["4.3. BSP Room Dungeons","chapter_25",[C[164]]],["4.4. BSP Interior Design","chapter_26",[C[164]]],["4.5. Cellular Automata Maps","chapter_27",[C[164]]],["4.6. Drunkard's Walk Maps","chapter_28",[C[164]]],["4.7. Mazes and Labyrinths","chapter_29",[C[164]]],["4.8. Diffusion-limited aggregation maps","chapter_30",[C[164]]],["4.9. Add symmetry and brushes to the library","chapter_31",[C[164]]],["4.10. Voronoi Hive Maps","chapter_32",[C[164]]],["4.11. Wave Function Collapse","chapter_33",[C[164]]],["4.12. Prefabs & Sectionals","chapter_34",[C[164]]],["4.13. Room Vaults","chapter_35",[C[164]]],["4.14. Layering/Builder Chaining","chapter_36",[C[164]]],["4.15. Fun With Layers","chapter_37",[C[164]]],["4.16. Room Builders","chapter_38",[C[164]]],["4.17. Better Corridors","chapter_39",[C[164]]],["4.18. Doors","chapter_40",[C[164]]],["4.19. Decouple map size from screen size","chapter_41",[C[164]]],["4.20. Section 3 Conclusion","chapter_42",[C[164]]],[C[165],"chapter_43",N],["5.1. Design Document","chapter_44",[C[165]]],["5.2. Raw Files, Data-Driven Design","chapter_45",[C[165]]],["5.3. Data-Driven Spawn Tables","chapter_46",[C[165]]],["5.4. Making the town","chapter_47",[C[165]]],["5.5. Populating the town","chapter_48",[C[165]]],["5.6. Living bystanders","chapter_49",[C[165]]],["5.7. Game Stats","chapter_50",[C[165]]],["5.8. Equipment","chapter_51",[C[165]]],["5.9. User Interface","chapter_52",[C[165]]],["5.10. Into the Woods!","chapter_53",[C[165]]],["5.11. XP","chapter_54",[C[165]]],["5.12. Backtracking","chapter_55",[C[165]]],["5.13. Into the caverns","chapter_56",[C[165]]],["5.14. Better AI","chapter_57",[C[165]]],["5.15. Spatial Indexing Revisited","chapter_57a",[C[165]]],["5.16. Item Stats and Vendors","chapter_58",[C[165]]],["5.17. Deep caverns","chapter_59",[C[165]]],["5.18. Cavern to Dwarf Fort","chapter_60",[C[165]]],["5.19. Town Portals","chapter_61",[C[165]]],["5.20. Magic Items","chapter_62",[C[165]]],["5.21. Effects","chapter_63",[C[165]]],["5.22. Cursed Items","chapter_64",[C[165]]],["5.23. Even More Items","chapter_65",[C[165]]],["5.24. Magic Spells","chapter_66",[C[165]]],["5.25. Enter the Dragon","chapter_67",[C[165]]],["5.26. Mushrooms","chapter_68",[C[165]]],["5.27. More Shrooms","chapter_69",[C[165]]],["5.28. Ranged Combat","chapter_70",[C[165]]],["5.29. Logging","chapter_71",[C[165]]],["5.30. Text Layers","chapter_72",[C[165]]],["5.31. Systems/Dispatch","chapter_73",[C[165]]],["5.32. Dark Elf City 1","chapter_74",[C[165]]],["6. Contributors","contributors",N],["7. Licensing","license",N]]},{"name":"High Assurance Rust Developing Secure and Robust Software","url":"https://highassurance.rs/","pages":[["High Assurance Rust","landing",N],["Frequently Asked Questions (FAQ)","faq",N],["Engage with this Book!","engage",N],["Sponsor Call for Proposals (CFP)","cfp",N],["Download","download",N],["Changelog","changelog",N],["License","license",N],[C[3],"chp1/_index",N],["1.1. Why this book?","chp1/why_this_book",[C[3]]],["1.2. How is this book structured?","chp1/how_is_this_book_structured",[C[3]]],["1.3. Hands-on Learning","chp1/challenges",[C[3]]],["1.4. About the Team","chp1/about_the_team",[C[3]]],["1.5. Warmup: Environment Setup","chp1/_hands_on",[C[3]]],[C[166],"chp2/_index",N],["2.1. Static vs. Dynamic Tools","chp2/static_vs_dynamic",[C[166]]],["2.2. Static Assurance (1/2)","chp2/static_assurance_1",[C[166]]],["2.3. Static Assurance (2/2)","chp2/static_assurance_2",[C[166]]],["2.4. Dynamic Assurance (1/3)","chp2/dynamic_assurance_1",[C[166]]],["2.5. Dynamic Assurance (2/3)","chp2/dynamic_assurance_2",[C[166]]],["2.6. Dynamic Assurance (3/3)","chp2/dynamic_assurance_3",[C[166]]],["2.7. Limitations and Threat Modeling","chp2/limits",[C[166]]],["2.8. DIY CLI Encryption Tool","chp2/cli",[C[166]]],["2.9. Operational Assurance (1/2)","chp2/operational_assurance_1",[C[166]]],["2.10. Operational Assurance (2/2)","chp2/operational_assurance_2",[C[166]]],["2.11. Challenge: Extend the CLI Tool","chp2/_hands_on",[C[166]]],[C[167],"chp3/_index",N],["3.1. On Undefined Behavior","chp3/undef",[C[167]]],["3.2. Rust: Low-Level Data (1/6)","chp3/rust_1_low_data_rep",[C[167]]],["3.3. Rust: High-Level Data (2/6)","chp3/rust_2_high_data_rep",[C[167]]],["3.4. Rust: Control Flow (3/6)","chp3/rust_3_ctrl_flow",[C[167]]],["3.5. Rust: Ownership Principles (4/6)","chp3/rust_4_own_1",[C[167]]],["3.6. Rust: Ownership in Practice (5/6)","chp3/rust_5_own_2",[C[167]]],["3.7. Rust: Error Handling (6/6)","chp3/rust_6_error",[C[167]]],["3.8. The Module System","chp3/modules",[C[167]]],["3.9. Recommended Tooling","chp3/tooling",[C[167]]],["3.11. Challenge: Port a Program","chp3/_hands_on",[C[167]]],[C[168],"chp4/_index",N],["4.1. Software Perspective: CPU to Process","chp4/sw_stack_1",[C[168]]],["4.2. Assurance Perspective: Stack Safety","chp4/assure_stack_1",[C[168]]],["4.3. Attacker's Perspective: Breaking Safety (1/2)","chp4/attack_1",[C[168]]],["4.4. Attacker's Perspective: Unifying Theory (2/2)","chp4/attack_2",[C[168]]],["4.10. Rust's Memory Safety Guarantees (1/2)","chp4/safe_rust_PLACEHOLDER",[C[168]]],[C[169],"chp16_appendix/_index",N],["16.2. Inventory: Tools of the Trade","chp16_appendix/tools",[C[169]]],["16.3. Inventory: Recommended Reading","chp16_appendix/books",[C[169]]],["16.4. Inventory: Additional Resources","chp16_appendix/resources",[C[169]]],["16.5. Fundamentals: Stream Ciphers","chp16_appendix/crypto",[C[169]]],["16.6. Fundamentals: Type Systems","chp16_appendix/types",[C[169]]],["16.7. Fundamentals: Component-Based Design","chp16_appendix/components",[C[169]]],["16.8. Fundamentals: Memory Hierarchy","chp16_appendix/mem_hierarch",[C[169]]],["16.10. Theory: Inter-procedural CFGs","chp16_appendix/icfg",[C[169]]]]},{"name":"Wasmtime docs","url":"https://docs.wasmtime.dev/","pages":[[C[3],C[4],N],[C[170],"cli",N],["2.1. Installation","cli-install",[C[170]]],["2.2. CLI Options","cli-options",[C[170]]],["2.3. CLI Logging","cli-logging",[C[170]]],["2.4. Cache Configuration","cli-cache",[C[170]]],[C[171],"lang",N],[C[172],"lang-rust",[C[171]]],["3.1.1. Hello, world!","examples-rust-hello-world",[C[171],C[172]]],["3.1.2. Calculating the GCD","examples-rust-gcd",[C[171],C[172]]],["3.1.3. Using Linear Memory","examples-rust-memory",[C[171],C[172]]],["3.1.4. WASI","examples-rust-wasi",[C[171],C[172]]],["3.1.5. Linking Modules","examples-rust-linking",[C[171],C[172]]],["3.1.6. Debugging","examples-rust-debugging",[C[171],C[172]]],["3.1.7. Core Dumps","examples-rust-core-dumps",[C[171],C[172]]],["3.1.8. Using Multi-Value","examples-rust-multi-value",[C[171],C[172]]],["3.2. C","lang-c",[C[171]]],["3.2.1. Hello, World!","examples-c-hello-world",[C[171],"3.2. C"]],["3.2.2. Calculating the GCD","examples-c-gcd",[C[171],"3.2. C"]],["3.2.3. Using Linear Memory","examples-c-memory",[C[171],"3.2. C"]],["3.2.4. WASI","examples-c-wasi",[C[171],"3.2. C"]],["3.2.5. Linking Modules","examples-c-linking",[C[171],"3.2. C"]],["3.2.6. Debugging","examples-c-debugging",[C[171],"3.2. C"]],["3.2.7. Using Multi-Value","examples-c-multi-value",[C[171],"3.2. C"]],["3.3. Python","lang-python",[C[171]]],["3.4. .NET","lang-dotnet",[C[171]]],["3.5. Go","lang-go",[C[171]]],["3.6. Bash","lang-bash",[C[171]]],["3.7. Ruby","lang-ruby",[C[171]]],["3.8. Elixir","lang-elixir",[C[171]]],[C[173],"examples",N],[C[174],"examples-debugging",[C[173]]],["4.1.1. Debugging with gdb and lldb","examples-debugging-native-debugger",[C[173],C[174]]],["4.1.2. Debugging with Core Dumps","examples-debugging-core-dumps",[C[173],C[174]]],[C[175],"examples-profiling",[C[173]]],["4.2.1. Profiling with Perf","examples-profiling-perf",[C[173],C[175]]],["4.2.2. Profiling with VTune","examples-profiling-vtune",[C[173],C[175]]],["4.2.3. Profiling with samply","examples-profiling-samply",[C[173],C[175]]],["4.2.4. Cross-platform Profiling","examples-profiling-guest",[C[173],C[175]]],["4.3. Checking Guests' Memory Accesses","wmemcheck",[C[173]]],["4.4. Building a minimal embedding","examples-minimal",[C[173]]],["4.5. Using Pulley","examples-pulley",[C[173]]],[C[176],C[158],N],["5.1. Release Process","stability-release",[C[176]]],["5.2. Tiers of support","stability-tiers",[C[176]]],["5.3. Platform Support","stability-platform-support",[C[176]]],["5.4. Wasm Proposals","stability-wasm-proposals",[C[176]]],[C[177],"security",N],["6.1. Disclosure Policy","security-disclosure",[C[177]]],["6.2. What is considered a security bug?","security-what-is-considered-a-security-vulnerability",[C[177]]],["6.3. Vulnerability runbook","security-vulnerability-runbook",[C[177]]],[C[178],C[45],N],["7.1. Architecture","contributing-architecture",[C[178]]],["7.2. Building","contributing-building",[C[178]]],["7.3. Testing","contributing-testing",[C[178]]],["7.4. Fuzzing","contributing-fuzzing",[C[178]]],["7.5. CI","contributing-ci",[C[178]]],["7.6. Reducing Test Cases","contributing-reducing-test-cases",[C[178]]],["7.7. Cross Compiling","contributing-cross-compiling",[C[178]]],["7.8. Coding Guidelines","contributing-coding-guidelines",[C[178]]],["7.9. Development Process","contributing-development-process",[C[178]]],["7.10. Implementing Wasm Proposals","contributing-implementing-wasm-proposals",[C[178]]],[C[179],"contributing-maintainer-guidelines",[C[178]]],["7.11.1. Code Review","contributing-code-review",[C[178],C[179]]],["7.11.2. Release Process","contributing-release-process",[C[178],C[179]]],["7.12. Conditional Compilation","contributing-conditional-compilation",[C[178]]],["7.13. Governance","contributing-governance",[C[178]]],["7.14. Code of Conduct","contributing-coc",[C[178]]]]}];export default booksIndex;